version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    platform: linux/amd64
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/kaspa_kasino?sslmode=disable
      - PGSSLMODE=disable
      - JWT_SECRET=your_secret_key_here
      - CORS_ORIGIN=http://localhost:5173
      - KASPA_WSS_ENDPOINT=ws://65.21.153.228:18210
      - KASPA_GRPC_ENDPOINT=65.21.153.228:16210
      - NETWORK=kaspatest
      - MASTER_MNEMONIC=pool opinion key horse upset tortoise tube miss world junior emotion acoustic
      - MASTER_PRIVATE_KEY=aa54792f0dd2cfcce030111476a4d3b083b109c5507a27649831bdaa24b564cb
      - MASTER_ADDRESS=kaspatest:qrwmxrezslrtux5fwltsh2dua3kqt6eytyuql9ck5p7jtapsw3nwwxmmyevvj
      - PNPM_HOME=/app/.pnpm-store
    volumes:
      - .:/app
      - pnpm_store:/app/.pnpm-store
      - node_modules:/app/node_modules
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    entrypoint: []
    command: >
      bash -c "
      while ! nc -z db 5432; do sleep 1; done &&
      PGPASSWORD=postgres psql -h db -U postgres -c 'DROP DATABASE IF EXISTS kaspa_kasino;' &&
      PGPASSWORD=postgres psql -h db -U postgres -c 'CREATE DATABASE kaspa_kasino;' &&
      pnpm config set store-dir /app/.pnpm-store &&
      pnpm install &&
      pnpm drizzle-kit generate &&
      pnpm drizzle-kit push &&
      pnpm run dev
      "

  db:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      # Performance tuning
      - POSTGRES_MAX_CONNECTIONS=100
      - POSTGRES_SHARED_BUFFERS=256MB
      - POSTGRES_EFFECTIVE_CACHE_SIZE=768MB
      - POSTGRES_MAINTENANCE_WORK_MEM=64MB
      - POSTGRES_CHECKPOINT_COMPLETION_TARGET=0.9
      - POSTGRES_WAL_BUFFERS=16MB
      - POSTGRES_DEFAULT_STATISTICS_TARGET=100
      - POSTGRES_RANDOM_PAGE_COST=1.1
      - POSTGRES_EFFECTIVE_IO_CONCURRENCY=200
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    command: >
      postgres
      -c shared_buffers=256MB
      -c effective_cache_size=768MB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=4MB
      -c min_wal_size=1GB
      -c max_wal_size=4GB
      -c ssl=off

volumes:
  postgres_data:
  pnpm_store:
  node_modules:

networks:
  default:
    name: kaspa-network
    driver: bridge 